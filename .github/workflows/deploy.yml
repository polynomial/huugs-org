name: Process Images and Deploy

on:
  push:
    branches:
      - main
  # Allow manual triggering
  workflow_dispatch:
  # Run once a day to check for new images
  schedule:
    - cron: '0 2 * * *'  # Runs at 2 AM UTC every day

# Ensure correct permissions for deployment
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  process-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for detecting changes
          lfs: true  # Support Git LFS if used

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for image changes
        id: check-images
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^pics/"; then
            echo "image_changes=true" >> $GITHUB_OUTPUT
            echo "Images changed, will process"
          else
            echo "image_changes=false" >> $GITHUB_OUTPUT
            echo "No image changes detected"
          fi

      - name: Process images
        run: npm run process-images
        # Always process on manual or scheduled runs, or when images change
        if: |
          github.event_name == 'workflow_dispatch' || 
          github.event_name == 'schedule' || 
          steps.check-images.outputs.image_changes == 'true'

      - name: Upload processed images
        uses: actions/upload-artifact@v3
        with:
          name: processed-images
          path: |
            public/images/thumbnails
            public/images/mediums
          retention-days: 1

  test:
    needs: process-images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download processed images
        uses: actions/download-artifact@v3
        with:
          name: processed-images
          path: public/images

      - name: Start server
        run: |
          npm start &
          sleep 5  # Give the server time to start
          echo "Server started"

      - name: Run gallery tests
        run: npm run test

      - name: Run Masonry tests
        run: npm run test:masonry

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-screenshots
          path: |
            masonry-test.png
            masonry-test-*.png
          retention-days: 1

      - name: Cleanup
        if: always()
        run: pkill -f "node server.js" || true

  deploy:
    needs: [process-images, test]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download processed images
        uses: actions/download-artifact@v3
        with:
          name: processed-images
          path: public/images

      - name: Build site
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 